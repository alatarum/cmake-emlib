IF(NOT EM_MCU)
	MESSAGE(FATAL_ERROR "Select your EnergyMicro chip using EM_MCU variable.")
ENDIF()

SET(${EMLIB_PREFIX} "")

STRING(TOLOWER "${EM_MCU}" EM_MCU_L)
STRING(TOUPPER "${EM_MCU}" EM_MCU_U)
#STRING(TOUPPER "${STM32_CHIP_TYPE}" STM32_CHIP_TYPE)

STRING(REGEX REPLACE "^([A-Z]+[0-9]+[A-Z]+)[0-9]+[A-Z]+[0-9]+$" "\\1" MCU_FAMILY ${EM_MCU_U})
IF(MCU_FAMILY STREQUAL ${EM_MCU_U})
	MESSAGE(FATAL_ERROR "Not Valid MCU: " ${MCU_FAMILY})
ENDIF()
STRING(TOLOWER "${MCU_FAMILY}" MCU_FAMILY_L)
STRING(TOUPPER "${MCU_FAMILY}" MCU_FAMILY_U)

SET(EMLIB_LIB_NAME ${EMLIB_PREFIX}${EM_MCU_L})
SET(EMLIB_SYSTEM_NAME system_${MCU_FAMILY_L}.c)
SET(EMLIB_STARTUP_NAME startup_${MCU_FAMILY_L}.s)


#MESSAGE(FATAL_ERROR "Stop")

IF(MCU_FAMILY_U STREQUAL "EFM32ZG")
	SET(TARGET_CORE "m0plus")
ELSEIF(MCU_FAMILY_U STREQUAL "EFM32WG")
	SET(TARGET_CORE "m4")
ELSE()
	SET(TARGET_CORE "m3")
ENDIF()

FIND_PATH(EMLIB_INCLUDE_DIR
	NAMES em_version.h core_c${TARGET_CORE}.h
	PATH_SUFFIXES include emlib
)
FIND_PATH(EMLIB_FAMILY_INCLUDE_DIR
	NAMES ${EM_MCU_L}.h system_${MCU_FAMILY_L}.h
	PATH_SUFFIXES include emlib/${MCU_FAMILY_U}
)

FIND_LIBRARY(EMLIB_LIBRARIES
	NAMES ${EMLIB_LIB_NAME}
	PATH_SUFFIXES lib
)

FIND_FILE(EMLIB_SYSTEM_SOURCE
	${EMLIB_SYSTEM_NAME}
	PATHS ${CMAKE_FIND_ROOT_PATH}/share/emlib/
)
FIND_FILE(EMLIB_STARTUP_SOURCE
	${EMLIB_STARTUP_NAME}
	PATHS ${CMAKE_FIND_ROOT_PATH}/share/emlib/
)
FIND_FILE(EMLIB_LINKER_SCRIPT
	efm32.ld.in
	PATHS ${CMAKE_FIND_ROOT_PATH}/share/emlib/
)

INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(EmLib DEFAULT_MSG EMLIB_LIBRARIES EMLIB_INCLUDE_DIR EMLIB_FAMILY_INCLUDE_DIR EMLIB_SYSTEM_SOURCE EMLIB_STARTUP_SOURCE EMLIB_LINKER_SCRIPT)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mcpu=cortex-${TARGET_CORE} -D${EM_MCU_U}")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mcpu=cortex-${TARGET_CORE} -D${EM_MCU_U}")
SET(CMAKE_ASM_FLAGS "${CMAKE_ASM_FLAGS} -mcpu=cortex-${TARGET_CORE}")
SET(CMAKE_EXE_LINKER_FLAGS "-T${CMAKE_CURRENT_BINARY_DIR}/${EM_MCU_L}.ld ${CMAKE_EXE_LINKER_FLAGS} -Wl,--start-group -lgcc -lc -lcs3 -lcs3unhosted -Wl,--end-group")

#FUNCTION(EMLIB_SET_CHIP_PARAMS FLASH_SIZE RAM_SIZE STACK_ADDRESS MIN_STACK_SIZE MIN_HEAP_SIZE EXT_RAM_SIZE FLASH_ORIGIN RAM_ORIGIN EXT_RAM_ORIGIN)
#	CONFIGURE_FILE(${CMSIS_LINKER_SCRIPT} ${CMAKE_CURRENT_BINARY_DIR}/stm32${STM32_FAMILY_L}_flash.ld)
#ENDFUNCTION(EMLIB_SET_CHIP_PARAMS)

FUNCTION(EMLIB_SET_CHIP_PARAMS FLASH_SIZE RAM_SIZE)
    SET(FLASH_SIZE ${FLASH_SIZE})
    SET(RAM_SIZE ${RAM_SIZE})
    SET(FLASH_ORIGIN "0x00000000")
    SET(RAM_ORIGIN "0x20000000")
    CONFIGURE_FILE(${EMLIB_LINKER_SCRIPT} ${CMAKE_CURRENT_BINARY_DIR}/${EM_MCU_L}.ld)
ENDFUNCTION(EMLIB_SET_CHIP_PARAMS)

