PROJECT(emlib)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
ENABLE_LANGUAGE(ASM)

SET(${EMLIB_PREFIX} "")

IF(TARGET_MCU)
	MESSAGE(STATUS "Building for " ${TARGET_MCU})
ELSE()
	MESSAGE(STATUS "No TARGET_MCU specified, building for all MCUs")
ENDIF()

IF(NOT EMLIB_DIR)
	SET(EMLIB_DIR "/opt/energymicro")
	MESSAGE(STATUS "No EMLIB_DIR specified, using default: " ${EMLIB_DIR})
ENDIF()

SET(EM_MCU_FAMILY_LIST EFM32LG)
#SET(EM_MCU_FAMILY_LIST EFM32G EFM32TG EFM32LG EFM32GG) #add here EFM32ZG, EFM32WG, EFR4D

IF(TARGET_MCU)
	FOREACH(TMP_MCU ${TARGET_MCU})
		STRING(TOLOWER "${TMP_MCU}" TMP_MCU_L)
		STRING(TOUPPER "${TMP_MCU}" TMP_MCU_U)
		STRING(REGEX REPLACE "(.+[0-9]+.+)[0-9]+" "\\1" MCU_FAMILY ${TMP_MCU_L})
		IF(MCU_FAMILY STREQUAL ${TMP_MCU_L})
			MESSAGE(STATUS "Not Valid MCU: " ${MCU_FAMILY})
		ELSE()
			MESSAGE(STATUS "Valid MCU: " ${MCU_FAMILY})
		ENDIF()
	ENDFOREACH(TMP_MCU)
	MESSAGE(FATAL_ERROR "NOT IMPLEMENTED YET!")
ELSE(TARGET_MCU)
	MESSAGE(STATUS "No part specified. Compiling for all parts.")
	FOREACH(EM_MCU_FAMILY ${EM_MCU_FAMILY_LIST})
		STRING(TOLOWER "${EM_MCU_FAMILY}" EM_MCU_FAMILY_L)
		STRING(TOUPPER "${EM_MCU_FAMILY}" EM_MCU_FAMILY_U)
		FILE(GLOB TMP_HEADERS  ${EMLIB_DIR}/Device/EnergyMicro/${EM_MCU_FAMILY_U}/Include/*.h)
		FOREACH(TMP_HEADER ${TMP_HEADERS})
			STRING(REGEX REPLACE ".*/(.+[0-9]+.+[0-9]+.+[0-9]+)\\.h$" "\\1" TMP_MCU ${TMP_HEADER})
			IF(TMP_MCU STREQUAL ${TMP_HEADER})
				SET(LIB_${EM_MCU_FAMILY_U}_HEADERS ${LIB_${EM_MCU_FAMILY_U}_HEADERS} ${TMP_HEADER})
			ELSE()
				SET(MCU_${EM_MCU_FAMILY_U}_LIST ${MCU_${EM_MCU_FAMILY_U}_LIST} ${TMP_MCU})
			ENDIF()
		ENDFOREACH(TMP_HEADER)
	ENDFOREACH(EM_MCU_FAMILY)
ENDIF()

INCLUDE_DIRECTORIES(
	${EMLIB_DIR}/CMSIS/Include
	${EMLIB_DIR}/emlib/inc
#	${CMAKE_CURRENT_SOURCE_DIR}
)
SET(EM_CMSIS_HEADERS
	${EMLIB_DIR}/CMSIS/Include/core_cmFunc.h
	${EMLIB_DIR}/CMSIS/Include/core_cmInstr.h
)

FILE(GLOB EMLIB_SOURCES ${EMLIB_DIR}/emlib/src/*.c)
FILE(GLOB EMLIB_HEADERS ${EMLIB_DIR}/emlib/inc/*.h)


FOREACH(EM_MCU_FAMILY ${EM_MCU_FAMILY_LIST})
	STRING(TOLOWER "${EM_MCU_FAMILY}" EM_MCU_FAMILY_L)
	STRING(TOUPPER "${EM_MCU_FAMILY}" EM_MCU_FAMILY_U)

	IF(EM_MCU_FAMILY_U STREQUAL "EFM32ZG")
		SET(TARGET_CORE "m0plus")
		SET(USE_M0P "YES")
	ELSEIF(EM_MCU_FAMILY_U STREQUAL "EFM32WG")
		SET(TARGET_CORE "m4")
		SET(USE_M4 "YES")
	ELSE()
		SET(TARGET_CORE "m3")
		SET(USE_M3 "YES")
	ENDIF()

	FOREACH(TMP_PART ${MCU_${EM_MCU_FAMILY_U}_LIST})
		STRING(TOLOWER "${TMP_PART}" TMP_PART_L)
		STRING(TOUPPER "${TMP_PART}" TMP_PART_U)

		ADD_LIBRARY(${EMLIB_PREFIX}${TMP_PART_L} ${EMLIB_SOURCES})
		SET_TARGET_PROPERTIES(${EMLIB_PREFIX}${TMP_PART_L} PROPERTIES COMPILE_FLAGS "-mcpu=cortex-${TARGET_CORE} -D${TMP_PART_U}")
		GET_TARGET_PROPERTY(TARGET_INCLUDE_DIRS ${EMLIB_PREFIX}${TMP_PART_L} INCLUDE_DIRECTORIES)
		SET_TARGET_PROPERTIES(${EMLIB_PREFIX}${TMP_PART_L} PROPERTIES INCLUDE_DIRECTORIES "${TARGET_INCLUDE_DIRS};${EMLIB_DIR}/Device/EnergyMicro/${EM_MCU_FAMILY_U}/Include")
		SET(EMLIB_TARGETS ${EMLIB_TARGETS} ${EMLIB_PREFIX}${TMP_PART_L})

	ENDFOREACH(TMP_PART)
ENDFOREACH(EM_MCU_FAMILY)


IF(USE_M0P STREQUAL "YES")
	SET(EM_CMSIS_HEADERS
		${EM_CMSIS_HEADERS}
		${EMLIB_DIR}/CMSIS/Include/core_cm0plus.h
	)
ENDIF()
IF(USE_M3 STREQUAL "YES")
	SET(EM_CMSIS_HEADERS
		${EM_CMSIS_HEADERS}
		${EMLIB_DIR}/CMSIS/Include/core_cm3.h
	)
ENDIF()
IF(USE_M4 STREQUAL "YES")
	SET(EM_CMSIS_HEADERS
		${EM_CMSIS_HEADERS}
		${EMLIB_DIR}/CMSIS/Include/core_cm4.h
	)
ENDIF()



#
#
#SET(EM_CMSIS_HEADERS
#	${EMLIB_DIR}/CMSIS/Include/core_c${TARGET_CORE}.h
#	${EMLIB_DIR}/CMSIS/Include/core_cmFunc.h
#	${EMLIB_DIR}/CMSIS/Include/core_cmInstr.h
#)

#IF(NOT EM_MCU_FAMILY)
#	SET(EM_MCU_FAMILY "EFM32G")
#	MESSAGE(STATUS "No EM_MCU_FAMILY specified, using default: " ${EM_MCU_FAMILY})
#ENDIF()
#STRING(TOLOWER "${EM_MCU_FAMILY}" EM_MCU_FAMILY_L)
#STRING(TOUPPER "${EM_MCU_FAMILY}" EM_MCU_FAMILY_U)
#MESSAGE(STATUS "Building for ${EM_MCU_FAMILY_U} family")





#IF(USE_ASSERT)
#    ADD_DEFINITIONS("-D\"assert_param(expr)\"=\"((expr) ? (void)0 : assert_failed((uint8_t *)__FILE__, __LINE__))\"")
#ELSE()
#    ADD_DEFINITIONS("-D\"assert_param(expr)\"=\"((void)0)\"")
#ENDIF()



INSTALL(TARGETS ${EMLIB_TARGETS}
	RUNTIME DESTINATION bin
	LIBRARY DESTINATION lib
	ARCHIVE DESTINATION lib
)

INSTALL(FILES
	${EM_CMSIS_HEADERS}
	${EMLIB_HEADERS}
	DESTINATION
	include/emlib
)


FOREACH(EM_MCU_FAMILY ${EM_MCU_FAMILY_LIST})
	STRING(TOLOWER "${EM_MCU_FAMILY}" EM_MCU_FAMILY_L)
	STRING(TOUPPER "${EM_MCU_FAMILY}" EM_MCU_FAMILY_U)

	SET(EM_SYSTEMS ${EM_SYSTEMS}
		${EMLIB_DIR}/Device/EnergyMicro/${EM_MCU_FAMILY_U}/Source/system_${EM_MCU_FAMILY_L}.c
	)
	SET(EM_STARTUPS ${EM_STARTUPS}
		${EMLIB_DIR}/Device/EnergyMicro/${EM_MCU_FAMILY_U}/Source/G++/startup_${EM_MCU_FAMILY_L}.s
	)

	INSTALL(FILES
		${LIB_${EM_MCU_FAMILY_U}_HEADERS}
		DESTINATION
		include/emlib/${EM_MCU_FAMILY_U}
	)

	FOREACH(TMP_PART ${MCU_${EM_MCU_FAMILY_U}_LIST})
		STRING(TOLOWER "${TMP_PART}" TMP_PART_L)
		STRING(TOUPPER "${TMP_PART}" TMP_PART_U)
		INSTALL(FILES
			${EMLIB_DIR}/Device/EnergyMicro/${EM_MCU_FAMILY_U}/Include/${TMP_PART_L}.h
			DESTINATION
			include/emlib/${EM_MCU_FAMILY_U}
		)
	ENDFOREACH(TMP_PART)
ENDFOREACH(EM_MCU_FAMILY)


INSTALL(FILES
	${EM_SYSTEMS}
	${EM_STARTUPS}
	${CMAKE_CURRENT_SOURCE_DIR}/efm32.ld.in
	DESTINATION
	share/emlib/
)
